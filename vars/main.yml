---
_rundeck_conditionl_packages:
  - name: openjdk-8-jre-headless
    condition: "{{ rundeck_install_java }}"
  - name: rundeck-cli
    condition: "{{ rundeck_cli_enable }}"
  - name: openssl
    condition: "{{ rundeck_ssl_enable or rundeck_trust_certs|length }}"
_rundeck_conditional_packages_to_install: "{{ _rundeck_conditionl_packages | selectattr('condition') | map(attribute='name') | list }}"
_rundeck_package: rundeck{{ '=' + rundeck_version if rundeck_version|length else '' }}
_rundeck_packages: "{{ [_rundeck_package] + _rundeck_conditional_packages_to_install }}"

# These might become customizable in a later version of the role.
rundeck_config_dir: /etc/rundeck
rundeck_base_dir: /var/lib/rundeck
rundeck_projects_dir: /var/lib/rundeck/projects
rundeck_user: rundeck
rundeck_group: rundeck
rundeck_ssl_dir: "{{ rundeck_config_dir }}/ssl"
rundeck_keystore: "{{ rundeck_ssl_dir }}/keystore"
rundeck_truststore: "{{ rundeck_ssl_dir }}/truststore"
rundeck_static_tokens_file: "{{ rundeck_config_dir }}/tokens.properties"

_rundeck_cli_static_token:
  user: cliuser
  token: "{{ _cli_token }}"
_rundeck_static_tokens: "{{ rundeck_static_tokens + ([_rundeck_cli_static_token] if rundeck_cli_auto_token else []) }}"

_rundeck_standard_jvm_settings:
  - -Drundeck.jetty.connector.forwarded={{ 'true' if runeck_jetty_connector_forwarded else 'false' }}
  - -Dserver.http.host={{ rundeck_listen_address }}
  - -Xmx{{ rundeck_maximum_heap_size }}
  - -Xms{{ rundeck_initial_heap_size }}
  - -XX:MaxMetaspaceSize={{ rundeck_maximum_metaspace_size }}
  - -server
_rundeck_jvm_settings: "{{ rundeck_extra_jvm_settings + _rundeck_standard_jvm_settings }}"

_rundeck_config:
  server:
    servlet:
      session:
        timeout: "{{ rundeck_session_timeout | default(3600) }}"
  rdeck:
    base: "{{ rundeck_base_dir }}"
  rss:
    enabled: "{{ 'true' if rundeck_rss_enabled else 'false' }}"
  rundeck:
    executionMode: "{{ rundeck_execution_mode }}"
    feature:
      repository:
        enabled: "{{ 'true' if rundeck_feature_repository_enabled else 'false' }}"
  pagination:
    default:
      max: "{{ rundeck_pagination_default }}"
  loglevel:
    default: "{{ rundeck_loglevel_default }}"
  log4j:
    configurationFile: "{{ rundeck_config_dir }}/log4j2.properties"
  logging:
    config: "{{ rundeck_config_dir }}/log4j2.properties"
  grails:
    serverURL: "{{ rundeck_external_url }}"
  dataSource:
    dbCreate: update
    url: jdbc:h2:file:{{ rundeck_base_dir }}/data/rundeckdb;MVCC=true

_rundeck_framework:
  rdeck:
    base: "{{ rundeck_base_dir }}"
  rundeck:
    server:
      uuid: "{{ _rundeck_uuid }}"
      url: "{{ rundeck_external_url }}"
    tokens:
      file: "{{ rundeck_static_tokens_file }}"
  framework:
    globals: "{{ rundeck_globals }}"
    server:
      name: "{{ rundeck_server_name }}"
      hostname: "{{ ansible_fqdn }}"
      port: "{{ rundeck_https_port if rundeck_ssl_enable else rundeck_http_port }}"
      url: "{{ rundeck_external_url }}"
    ssh:
      keypath: "{{ rundeck_base_dir }}/.ssh/id_rsa"
      user: "{{ rundeck_user }}"
      timeout: 0
    projects:
      dir: "{{ rundeck_projects_dir }}"
    etc:
      dir: "{{ rundeck_config_dir }}"
    var:
      dir: "{{ rundeck_base_dir }}/var"
    tmp:
      dir: "{{ rundeck_base_dir }}/var/tmp"
    logs:
      dir: "{{ rundeck_base_dir }}/logs"
    libext:
      dir: "{{ rundeck_base_dir }}/libext"
