---
# Whether to install the apt https transport. If this is installed elsewhere in
# your automation, disabling this saves a little time.
rundeck_install_apt_transport_https: true

# Apt repo configuration.
rundeck_install_apt_key: true
rundeck_apt_key_url: https://bintray.com/user/downloadSubjectPublicKey?username=bintray
rundeck_install_apt_repo: true
rundeck_apt_repo: deb https://rundeck.bintray.com/rundeck-deb /

# Pinning the version prevents unexpected/accidental upgrades. Pinning only
# works if a specific version is specified using the rundeck_version variable.
rundeck_pin_version: "{{ rundeck_version|length > 0 }}"

# The version is blank by default. This means that whichever version apt chooses
# by default is what will be installed. Set to a specific version as needed.
# Shall be at least 2.5 or will fail if DB storage is choosen
rundeck_version: ""

# Disable if you'd prefer to install Java differently.
rundeck_install_java: true

# URL to access Rundeck
rundeck_external_url: http{{ 's' if rundeck_ssl_enable else '' }}://{{ ansible_fqdn }}:{{ rundeck_https_port if rundeck_ssl_enable else rundeck_http_port }}

# Name (identity) of the Rundeck server node
rundeck_server_name: "{{ ansible_fqdn }}"

# rundeck key storage
rundeck_storage_jasypt_encryption: mysecret
rundeck_storage: {} # List the key storage that you want
# rundeck_storage:
#  - name: myname
#  - content: mycontent
#  - path: mypath/


rundeck_projects: []
# Example of projects:
    # - rundeck_projects:
    #   - MyRundeckProject:
    #       "project.name": "MyRundeckProject"
    #       "project.description": "Manages my server activities"
    #       "project.disable.executions": "false"
    #       "project.disable.schedule": "false"
    #       "project.jobs.gui.groupExpandLevel": "1"
    #       "project.nodeCache.delay": "30"
    #       "project.nodeCache.enabled": "true"
    #       "project.ssh-authentication": "privateKey"
    #       "project.ssh-command-timeout": "0"
    #       "project.ssh-connect-timeout": "0"
    #       "project.ssh-keypath": "/var/lib/rundeck/.ssh/id_rsa"
    #       "resources.source.1.type": "file"
    #       "resources.source.1.config.file": "/var/rundeck/projects/MyRundeckProject/etc/resources.xml"
    #       "resources.source.1.config.format": "resourcexml"
    #       "resources.source.1.config.generateFileAutomatically": "false"
    #       "resources.source.1.config.includeServerNode": "true"
    #       "resources.source.1.config.requireFileExists": "false"
    #       "resources.source.1.config.writeable": "true"
    #       "service.FileCopier.default.provider": "jsch-scp"
    #       "service.NodeExecutor.default.provider": "jsch-ssh"
    #       "plugin.ExecutionFileStorage.org.rundeck.amazon-s3.AWSAccessKeyId": "someAWSid"
    #       "plugin.ExecutionFileStorage.org.rundeck.amazon-s3.AWSSecretKey": "someAWSkey"
    #       "plugin.ExecutionFileStorage.org.rundeck.amazon-s3.bucket": "someAWSbucketName"
    #       "plugin.ExecutionFileStorage.org.rundeck.amazon-s3.path": "someBucketDir/${job.project}/${job.execid}.log"
    #       "plugin.ExecutionFileStorage.org.rundeck.amazon-s3.region": "someAWSregion"

rundeck_api_enable: "{{ rundeck_projects|length > 0 }}"
rundeck_api_user: "{{ ansible_facts.user_id }}"
rundeck_api_auto_token: "{{ rundeck_projects|length > 0 }}"
rundeck_api_auto_token_acl: |
  description: Admin, all access.
  context:
    project: '.*' # all projects
  for:
    resource:
      - allow: '*' # allow read/create all kinds
    adhoc:
      - allow: '*' # allow read/running/killing adhoc jobs
    job:
      - allow: '*' # allow read/write/delete/run/kill of all jobs
    node:
      - allow: '*' # allow read/run for all nodes
  by:
    username: apiuser
  ---
  description: Admin, all access.
  context:
    application: 'rundeck'
  for:
    resource:
      - allow: '*' # allow create of projects
    project:
      - allow: '*' # allow view/admin of all projects
    project_acl:
      - allow: '*' # allow admin of all project-level ACL policies
    storage:
      - allow: '*' # allow read/create/update/delete for all /keys/* storage content
  by:
    username: apiuser

rundeck_cli_enable: true
rundeck_cli_user: "{{ ansible_facts.user_id }}"
rundeck_cli_insecure_ssl: false
rundeck_cli_auto_token: false
rundeck_cli_auto_token_acl: |
  description: Admin, all access.
  context:
    project: '.*' # all projects
  for:
    resource:
      - allow: '*' # allow read/create all kinds
    adhoc:
      - allow: '*' # allow read/running/killing adhoc jobs
    job:
      - allow: '*' # allow read/write/delete/run/kill of all jobs
    node:
      - allow: '*' # allow read/run for all nodes
  by:
    username: cliuser
  ---
  description: Admin, all access.
  context:
    application: 'rundeck'
  for:
    resource:
      - allow: '*' # allow create of projects
    project:
      - allow: '*' # allow view/admin of all projects
    project_acl:
      - allow: '*' # allow admin of all project-level ACL policies
    storage:
      - allow: '*' # allow read/create/update/delete for all /keys/* storage content
  by:
    username: cliuser

# Set execution mode to 'active' or 'passive' (no jobs can be run)
rundeck_execution_mode: active
# Default paginator per-page value
rundeck_pagination_default: 20
# Default log level for jobs: ERROR, WARN, INFO, VERBOSE, DEBUG
rundeck_loglevel_default: INFO
# if set to true enables RSS feeds that are public (non-authenticated)
rundeck_rss_enabled: false

# Database config
rundeck_database_type: 'hsqldb'
rundeck_database_host: 'localhost'
rundeck_database_name: 'rundeck'
rundeck_database_user: 'rundeck'
rundeck_database_pass: 'rundeck'

# Any additional config or overrides. See _rundeck_config in vars/main.yml
rundeck_extra_config: {}

# Static globals to expose to all jobs in ${globals.*}
rundeck_globals: {}
# myvar: myvalue
# othervar: othervalue

# Disable if you don't want to change session timeout. Might be useful if
# installing lxml on remote host isn't desired or possible.
rundeck_set_session_timeout: true
rundeck_session_timeout: 30

rundeck_listen_address: 0.0.0.0
rundeck_http_port: 4440
rundeck_https_port: 4430

# Java memory configuration
rundeck_initial_heap_size: 256m
rundeck_maximum_heap_size: 1024m
rundeck_maximum_metaspace_size: 256m
rundeck_extra_jvm_settings: []

rundeck_open_file_limit: 65535

# Include paths to certs to be trusted by Rundeck.
rundeck_trust_certs: {}
# ldap: /path/to/cert.pem

rundeck_ssl_enable: false
rundeck_ssl_cert_path: "{{ rundeck_config_dir }}/ssl/cert.pem"
rundeck_ssl_key_path: "{{ rundeck_config_dir }}/ssl/key.pem"

# If these contain the cert/key bytes, they will be written to the paths above.
rundeck_ssl_cert: ''
rundeck_ssl_key: ''

rundeck_ldap_enable: false
rundeck_ldap_debug: false
rundeck_ldap_url: ldap://server:389

rundeck_ldap_auth_method: simple
rundeck_ldap_user_base_dn: ou=People,dc=test1,dc=example,dc=com
rundeck_ldap_user_rdn_attr: uid
rundeck_ldap_user_id_attr: uid
rundeck_ldap_user_password_attr: userPassword
rundeck_ldap_user_object_class: inetOrgPerson
rundeck_ldap_role_base_dn: ou=Groups,dc=test1,dc=example,dc=com
rundeck_ldap_role_name_attr: cn
# rundeck_ldap_username_member_attr: memberUid
rundeck_ldap_role_member_attr: uniqueMember
rundeck_ldap_role_object_class: groupOfUniqueNames
rundeck_ldap_nested_groups: false
rundeck_ldap_role_prefix: ''

rundeck_ldap_cache_duration_millis: 300000
rundeck_ldap_supplemental_roles: user
rundeck_ldap_report_stats: true
rundeck_ldap_timeout_read: 10000
rundeck_ldap_timeout_connect: 20000

rundeck_ldap_binding_login: true
rundeck_ldap_bind_dn: cn=Manager,dc=example,dc=com
rundeck_ldap_bind_password: sekrit

rundeck_crowd_enable: false
rundeck_crowd_name: 'RunDeck'
rundeck_crowd_pass: 'secret'
rundeck_crowd_url: 'http://localhost/crowd/'
rundeck_crowd_maxconn: 20
rundeck_crowd_timeout: 5000
rundeck_crowd_debug: false
rundeck_crowd_jaas_jars:
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/commons-codec-1.2.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/commons-httpclient-3.1.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/commons-logging-1.0.4.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/jaas-jetty-crowd-1.0.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/jersey-apache-client-1.19.3.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/jersey-client-1.19.3.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/jersey-core-1.19.3.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/jsr311-api-1.1.1.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/slf4j-api-1.7.5.jar
  - https://github.com/realloc/crowd-jaas/releases/download/v0.0.2/slf4j-simple-1.7.5.jar

rundeck_ssh_private_key: ''

rundeck_static_tokens: []
# - user: someuser
#   token: sekrit

rundeck_plugins: []
# - url: https://example.com/some-plugin.jar
#   checksum: sha256:...
rundeck_users: []
rundeck_acls: []
# - name: my_policy
#   policy:
#     description: A policy
#     context:
#       application: rundeck
#     for:
#       project:
#         - allow: read
#     by:
#       group: somegroup
# - name: old_policy
#   state: absent

# If cleanup is enabled, you probably also need the CLI enabled, unless you
# arrange for the rd commandline tool to be installed some other way.
rundeck_cleanup_enable: false
rundeck_cleanup_batch_size: 20
rundeck_cleanup_older_than: 30d
rundeck_cleanup_schedule:
  special_time: daily
rundeck_cleanup_script_path: /usr/local/bin/rd-cleanup
rundeck_cleanup_cron_file: ansible_rundeck-cleanup
rundeck_cleanup_user: "{{ rundeck_cli_user }}"
# rundeck_cleanup_command:
